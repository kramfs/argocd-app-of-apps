# Reference: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/project.yaml
apiVersion: argoproj.io/v1alpha1
# Same as kind: AppProject
kind: AppProject
metadata:
  name: ci
  namespace: argocd
  annotations:
    #notifications.argoproj.io/subscribe.on-sync-succeeded.slack: argocd-notifications
    #notifications.argoproj.io/subscribe.on-deployed.slack: argocd-notifications
    #notifications.argoproj.io/subscribe.on-health-degraded.slack: argocd-notifications
    #notifications.argoproj.io/subscribe.on-sync-failed.slack: argocd-notifications
    ##notifications.argoproj.io/subscribe.on-sync-status-unknown.slack: argocd-notifications
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: For CI Deployments

  # ClusterResource
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  # Deny all cluster-scoped resources from being created, except for Namespace
  #- group: ''
  #kind: Namespace

  # Allow ALL namespaced-scoped resources to be created, EXCEPT for ResourceQuota, LimitRange, NetworkPolicy
  #namespaceResourceBlacklist: {}
  namespaceResourceBlacklist:
  - group: ''
    kind: ''
    #kind: ResourceQuota
  - group: ''
    kind: ''
    #kind: LimitRange
  - group: ''
    kind: ''
    #kind: NetworkPolicy

  # Deny ALL namespaced-scoped resources from being created, EXCEPT for what are listed below
  #namespaceResourceWhitelist:
  #- group: 'apps'
  #  kind: Deployment
  #- group: 'apps'
  #  kind: StatefulSet
  #- group: 'apps'
  #  kind: networking
  #- group: ''
  #  kind: ConfigMap
  #- group: 'apps'
  #  kind: ServiceAccount
  #- group: ''
  #  kind: HorizontalPodAutoscaler
  #- group: 'ci'
  #  kind: Service
  #- group: 'ci'
  #  kind: PersistentVolumeClaim
  #- group: ''
  #  kind: policy

  ## Enables namespace orphaned resource monitoring.
  orphanedResources:
    warn: false
    #warn: true
  destinations:
  - name: '*'
    namespace: '*'
    server: https://kubernetes.default.svc

  roles:
  ## A role which provides read-only access to all applications in the project
  #- name: read-only
  #  description: Read-only privileges to my-project
  #  policies:
  #  - p, proj:ci:read-only, applications, get, ci/*, allow
  #  groups:
  #  - argocd-dev

  ## A role which provides sync privileges to all applications in the project i.e. sync privileges to a CI system
  #- name: ci-dev
  #  description: Allow Sync privileges to all Applications in the Project
  #  policies:
  #  - p, proj:ci:ci-dev, applications, sync, ci/*, allow

    ## NOTE: JWT tokens can only be generated by the API server and the token is not persisted
    ## anywhere by Argo CD. It can be prematurely revoked by removing the entry from this list.
  #  jwtTokens:
  #  - iat: 1535390316

  ## Sync windows restrict when Applications may be synced. https://argo-cd.readthedocs.io/en/stable/user-guide/sync_windows/
  #syncWindows:
  #- kind: allow
  #  schedule: '10 1 * * *'
  #  duration: 1h
  #  applications:
  #    - '*-prod'
  #  manualSync: true
  #- kind: deny
  #  schedule: '0 22 * * *'
  #  duration: 1h
  #  namespaces:
  #    - default
  #- kind: allow
  #  schedule: '0 23 * * *'
  #  duration: 1h
  #  clusters:
  #    - in-cluster
  #    - cluster1

  ## By default, apps may sync to any cluster specified under the `destinations` field, even if they are not
  ## scoped to this project. Set the following field to `true` to restrict apps in this cluster to only clusters
  ## scoped to this project.
  #permitOnlyProjectScopedClusters: false

  ## When using Applications-in-any-namespace, this field determines which namespaces this AppProject permits
  ## Applications to reside in. Details: https://argo-cd.readthedocs.io/en/stable/operator-manual/app-any-namespace/
  #sourceNamespaces:
  #- "argocd-apps-*"