version: '3'

env: # global scope
  TF_AUTO: --auto-approve
  KUBE_GET: kubectl get all

tasks:
  default:
    desc: "Show this task list"
    cmds:
      - task --list-all

  init:
    internal: true
    dir: argocd
    cmds:
      - terraform init -upgrade

  plan:
    internal: true
    cmds:
      - terraform plan $TF_AUTO

  apply:
    internal: true
    dir: argocd
    cmds:
      - terraform apply $TF_AUTO

  destroy:
    internal: true
    dir: argocd
    cmds:
      - terraform destroy $TF_AUTO

  argo-credentials:
    desc: "Show the initial ArgoCD admin credential"
    internal: true
    preconditions:
      # Fail when the k8s cluster is not running
      - $KUBE_GET
    cmds:
      - echo $(kubectl -n argocd get secret/argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)

  argo-ip:
    desc: "Show ArgoCD IP"
    internal: false
    silent: true
    preconditions:
      # Fail when the k8s cluster is not running
      #- kubectl get all
      - $KUBE_GET
    cmds:
      - kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}'

  up:
    desc: "Bring up the cluster"
    dir: argocd
    cmds:
      - task: init
      - task: apply
      - task: argo-credentials
      - kubectl apply -f ../control-app.yaml

  cleanup:
    desc: "Destroy and clean up the cluster"
    dir: argocd
    cmds:
      - task: destroy
      - find . -name '*terraform*' -print | xargs rm -Rf